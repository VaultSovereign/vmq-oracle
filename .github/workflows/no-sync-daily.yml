name: No-Sync Daily
on:
  schedule:
    - cron: '0 4 * * *'  # 04:00 UTC daily
  workflow_dispatch: {}

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_QB_OIDC_ROLE_ARN }}
          aws-region: eu-west-1

      - name: Enforce last sync ≤ 24h and write evidence
        env:
          REGION: eu-west-1
          APP_ID: ${{ secrets.QB_APP_ID }}
          INDEX_ID: ${{ secrets.QB_INDEX_ID }}
          DS_ID: ${{ secrets.QB_DS_ID }}
          AUDIT_BUCKET: ${{ secrets.QB_EXPORT_BUCKET }}
          ALERT_SNS_TOPIC_ARN: ${{ secrets.ALERT_SNS_TOPIC_ARN }}
        run: |
          set -euo pipefail
          last=$(aws qbusiness list-data-source-sync-jobs \
            --region "$REGION" --application-id "$APP_ID" \
            --index-id "$INDEX_ID" --data-source-id "$DS_ID" \
            --query 'history[0].endTime' --output text)
          echo "LastSyncEndTime=$last"
          if [ "$last" = "None" ] || [ -z "$last" ]; then
            echo "❌ No previous successful sync found"
            exit 1
          fi
          now=$(date -u +%s)
          last_epoch=$(date -u -d "$last" +%s)
          delta=$(( now - last_epoch ))
          if [ "$delta" -gt 86400 ]; then
            ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            msg="No successful sync in >24h (Δ=${delta}s)"
            echo "❌ $msg"
            printf '{"ts":"%s","breach":"sync_slo","delta_seconds":%s}\n' "$ts" "$delta" \
              | aws s3 cp - "s3://${AUDIT_BUCKET}/audit/incidents/no-sync-${ts}.json"
            if [ -n "${ALERT_SNS_TOPIC_ARN:-}" ]; then
              aws sns publish --topic-arn "$ALERT_SNS_TOPIC_ARN" --message "$msg"
            fi
            exit 1
          fi
          echo "✅ Sync freshness OK (Δ=${delta}s ≤ 86400)"
